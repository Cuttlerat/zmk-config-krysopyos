#include <behaviors/mouse_key_toggle.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&soft_off { hold-time-ms = <3000>; };

&mt {
    flavor = "balanced";
    require-prior-idle-ms = <200>;
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Auto Shift";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            require-prior-idle-ms = <125>;
        };

        ca: ctrl_alt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LCTRL>, <&kp LALT>;
        };

        sb: shift_backspase {
            compatible = "zmk,behavior-mod-morph";
            label = "shift_BACKSPASE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        rsb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
            timeout-ms = <100>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        t {
            bindings = <&kp T>;
            key-positions = <30 31>;
            layers = <2>;
            timeout-ms = <100>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            bindings = <
&kp Q  &kp W         &kp E             &kp R           &kp T  &kp Y    &kp U  &kp I      &kp O    &kp P
&kp A  &kp S         &kp D             &kp F           &kp G  &kp H    &kp J  &kp K      &kp L    &kp SEMI
&kp Z  &kp X         &kp C             &kp V           &kp B  &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH
&mo 1  &kp LEFT_GUI  &kp LEFT_BRACKET  &kp SQT
&sb    &kp SPACE     &mo 3             &kp LEFT_SHIFT  &ca    &kp TAB
            >;
        };

        function_keys {
            bindings = <
&none           &none  &none            &none    &none         &kp PAGE_UP    &kp F7  &kp F8  &kp F9  &kp F12
&none           &none  &none            &none    &none         &kp HOME       &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_CLR_ALL  &none  &none            &none    &none         &kp PAGE_DOWN  &kp F1  &kp F2  &kp F3  &kp F10
&none           &none  &kp END          &kp INS
&kp DELETE      &none  &kp PRINTSCREEN  &tog 2   &out OUT_USB  &out OUT_BLE
            >;
        };

        gaming_mode {
            bindings = <
&kp TAB     &kp Q      &kp W   &kp E   &kp R         &trans        &trans     &trans     &trans     &trans
&kp LSHFT   &kp A      &kp S   &kp D   &kp F         &trans        &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans
&kp LCTRL   &kp Z      &kp X   &kp C   &kp V         &trans        &mo 5      &trans     &trans     &trans
&kp G       &kp B      &trans  &trans
&kp ESCAPE  &kp SPACE  &mo 6   &tog 2  &kp LEFT_ALT  &kp LEFT_WIN
            >;
        };

        numbers {
            bindings = <
&kp ESCAPE  &none     &kp UP    &none      &none      &kp LS(GRAVE)  &kp N7  &kp N8  &kp N9  &kp GRAVE
&kp LSHFT   &kp LEFT  &kp DOWN  &kp RIGHT  &none      &kp LS(MINUS)  &kp N4  &kp N5  &kp N6  &kp MINUS
&kp LCTRL   &none     &none     &none      &kp ENTER  &kp LS(EQUAL)  &kp N1  &kp N2  &kp N3  &kp EQUAL
&tog 2      &none     &kp N0    &kp DOT
&none       &none     &trans    &trans     &trans     &trans
            >;
        };

        auto_mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mo 5      &trans     &trans     &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        gaming_numbers {
            bindings = <
&kp ESCAPE        &kp N1  &kp N2      &kp N3  &kp NUMBER_2  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT    &kp N4  &kp N5      &kp N6  &kp N0        &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &kp N7  &kp N8      &kp N9  &kp RET       &trans  &trans  &trans  &trans  &trans
&trans            &trans  &mktg LCLK  &mktg RCLK
&trans            &trans  &trans      &trans  &trans        &trans
            >;
        };
    };
};
